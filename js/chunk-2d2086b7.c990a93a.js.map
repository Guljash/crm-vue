{"version":3,"sources":["webpack:///./src/views/Login.vue","webpack:///./src/views/Login.vue?e63b"],"names":["class","for","type","submitHandler","id","v$","email","$error","$errors","error","index","key","printError","$validator","$params","password","min","to","name","setup","data","methods","$touch","formData","$store","dispatch","$router","push","console","log","$name","$param","mounted","messages","this","$route","query","message","$message","validations","required","minLength","render"],"mappings":"0IAESA,MAAM,gB,EACT,eAAoD,QAA9CA,MAAM,cAAa,wBAAoB,G,GACxCA,MAAM,e,EAQT,eAAgC,SAAzBC,IAAI,SAAQ,SAAK,G,GASrBD,MAAM,e,EAOT,eAAoC,SAA7BC,IAAI,YAAW,UAAM,G,GAU3BD,MAAM,e,EACT,eAKM,YAJJ,eAGS,UAHDA,MAAM,2CAA2CE,KAAK,U,gBAAS,WAErE,eAAwC,KAArCF,MAAM,wBAAuB,Y,MAIjCA,MAAM,U,iBAAS,mB,iBAEY,sB,oFA/ClC,eAkDO,QAlDDA,MAAM,iBAAkB,SAAM,8CAAU,EAAAG,eAAA,EAAAA,cAAA,qBAAa,e,CACzD,eAmCM,MAnCN,EAmCM,CAlCJ,EACA,eAgBM,MAhBN,EAgBM,C,eAfJ,eAME,SALAC,GAAG,QACHF,KAAK,OACLF,MAAK,gBAAC,WAAU,SAEG,EAAAK,GAAGC,MAAMC,U,qDADd,EAAAD,MAAK,K,iBAAL,EAAAA,W,SAAd,MAGF,G,mBACA,eAMQ,2BAJmB,EAAAD,GAAGC,MAAME,SAAO,SAAjCC,EAAOC,G,wBAFjB,eAMQ,SALNV,MAAM,sBAELW,IAAKD,G,eAEH,EAAAE,WAAWH,EAAMI,WAAYJ,EAAMK,UAAO,M,QAGjD,eAeM,MAfN,EAeM,C,eAdJ,eAKE,SAJAV,GAAG,WACHF,KAAK,WACLF,MAAM,W,qDACG,EAAAe,SAAQ,K,mBAAR,EAAAA,YAEX,G,mBACA,eAMQ,2BAJmB,EAAAV,GAAGU,SAASP,SAAO,SAApCC,EAAOC,G,wBAFjB,eAMQ,SALNV,MAAM,sBAELW,IAAKD,G,eAEH,EAAAE,WAAWH,EAAMI,WAAYJ,EAAMK,QAAQE,MAAG,M,UAIvD,eAYM,MAZN,EAYM,CAXJ,EAOA,eAGI,IAHJ,EAGI,C,EADF,eAA4D,GAA/CC,GAAG,aAAW,C,wBAAC,iBAAkB,C,qFAWvC,GACbC,KAAM,QACNC,MAFa,WAGX,MAAO,CAAEd,GAAI,mBAEfe,KALa,WAMX,MAAO,CACLd,MAAO,GACPS,SAAU,KAGdM,QAAS,CACDlB,cADC,WACe,iKACpB,EAAKE,GAAGiB,UACJ,EAAKjB,GAAGE,OAFQ,wDAIdgB,EAAW,CACfjB,MAAO,EAAKA,MACZS,SAAU,EAAKA,UANG,kBASZ,EAAKS,OAAOC,SAAS,QAASF,GATlB,OAUlB,EAAKG,QAAQC,KAAK,KAVA,2DAYlBC,QAAQC,IAAR,MAZkB,kEAgBtBjB,WAjBO,SAiBIkB,EAAOC,GAChB,MAAc,aAAVD,EACK,6BACY,cAAVA,EACF,iCAAmCC,EAAS,YAChC,UAAVD,EACF,sDADF,IAKXE,QAtCa,WAuCPC,EAAS,KAAAC,KAAKC,OAAOC,MAAMC,UAC7BH,KAAKI,SAASL,EAAS,KAAAC,KAAKC,OAAOC,MAAMC,WAG7CE,YAAa,CACXjC,MAAO,CAAEkC,SAAA,OAAUlC,MAAA,QACnBS,SAAU,CAAEyB,SAAA,OAAUC,UAAW,eAAU,MCrG/C,EAAOC,OAASA,EAED","file":"js/chunk-2d2086b7.c990a93a.js","sourcesContent":["<template>\n  <form class=\"card auth-card\" @submit.prevent=\"submitHandler\">\n    <div class=\"card-content\">\n      <span class=\"card-title\">Домашняя бухгалтерия</span>\n      <div class=\"input-field\">\n        <input\n          id=\"email\"\n          type=\"text\"\n          class=\"validate\"\n          v-model.trim=\"email\"\n          :class=\"{ invalid: v$.email.$error }\"\n        />\n        <label for=\"email\">Email</label>\n        <small\n          class=\"helper-text invalid\"\n          v-for=\"(error, index) of v$.email.$errors\"\n          :key=\"index\"\n        >\n          {{ printError(error.$validator, error.$params) }}\n        </small>\n      </div>\n      <div class=\"input-field\">\n        <input\n          id=\"password\"\n          type=\"password\"\n          class=\"validate\"\n          v-model=\"password\"\n        />\n        <label for=\"password\">Пароль</label>\n        <small\n          class=\"helper-text invalid\"\n          v-for=\"(error, index) of v$.password.$errors\"\n          :key=\"index\"\n        >\n          {{ printError(error.$validator, error.$params.min) }}\n        </small>\n      </div>\n    </div>\n    <div class=\"card-action\">\n      <div>\n        <button class=\"btn waves-effect waves-light auth-submit\" type=\"submit\">\n          Войти\n          <i class=\"material-icons right\">send</i>\n        </button>\n      </div>\n\n      <p class=\"center\">\n        Нет аккаунта?\n        <router-link to=\"/register\">Зарегистрироваться</router-link>\n      </p>\n    </div>\n  </form>\n</template>\n\n<script>\nimport useVuelidate from \"@vuelidate/core\";\nimport { required, email, minLength } from \"@vuelidate/validators\";\nimport messages from \"@/utils/messages\";\n\nexport default {\n  name: \"login\",\n  setup() {\n    return { v$: useVuelidate() };\n  },\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n    };\n  },\n  methods: {\n    async submitHandler() {\n      this.v$.$touch();\n      if (this.v$.$error) return;\n\n      const formData = {\n        email: this.email,\n        password: this.password,\n      };\n      try {\n        await this.$store.dispatch(\"login\", formData);\n        this.$router.push(\"/\");\n      } catch (e) {\n        console.log(e);\n        throw e;\n      }\n    },\n    printError($name, $param) {\n      if ($name === \"required\") {\n        return \"Поле не должно быть пустым\";\n      } else if ($name === \"minLength\") {\n        return \"Минимальная длина должна быть \" + $param + \" символов\";\n      } else if ($name === \"email\") {\n        return \"Адрес электронной почты был введен неправильно\";\n      }\n    },\n  },\n  mounted() {\n    if (messages[this.$route.query.message]) {\n      this.$message(messages[this.$route.query.message]);\n    }\n  },\n  validations: {\n    email: { required, email },\n    password: { required, minLength: minLength(6) },\n  },\n};\n</script>\n","import { render } from \"./Login.vue?vue&type=template&id=3f5dd2bc\"\nimport script from \"./Login.vue?vue&type=script&lang=js\"\nexport * from \"./Login.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}